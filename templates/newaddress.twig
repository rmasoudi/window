{% extends 'base.twig' %}

{% block title %}G-Ling{% endblock %}
{% block styles %}
    <link rel="stylesheet" type="text/css" href="https://static.neshan.org/sdk/openlayers/5.3.0/ol.css">
{% endblock %}
{% block scripts %}
    <link href="https://static.neshan.org/sdk/leaflet/1.4.0/leaflet.css" rel="stylesheet" type="text/css">
    <script src="https://static.neshan.org/sdk/leaflet/1.4.0/leaflet.js" type="text/javascript"></script>
    <script type="text/javascript">
        marker=null;
        map=null;
        $(document).ready(function (){
         
         var lon=35.735766;
         var lat=51.429760;
        $("#name").focus();
         window.addEventListener('load', function() {
             var forms = document.getElementsByClassName('needs-validation');
             var validation = Array.prototype.filter.call(forms, function(form) {
                 form.addEventListener('submit', function(event) {
                     if (form.checkValidity() === false) {
                         event.preventDefault();
                         event.stopPropagation();
                     }
                     form.classList.add('was-validated');
                 }, false);
             });
         }, false);
             map = new L.Map('map', {
                key: 'web.XwnRDV8i9M3WHYHVxvTHeRcNIVTxWn4UUrLxnTPx',
                maptype: 'dreamy',
                poi: true,
                traffic: false,
                center: [lon, lat],
                zoom: 14
            });
            
            map.on('click', function (e){
                if(marker!==null){
                    map.removeLayer(marker);
                }
                marker = L.marker(e.latlng).addTo(map);
                $("#point").val(e.latlng.lat+","+e.latlng.lng);
            });
            initValues();
        });
        
        function initValues(){
            var editing=getEditingAddress();
            if(editing===null){
                $("#id").val(-1);
                return;
            }
            $("#id").val(editing.id);
            $("#name").val(editing.name);
            $("#phone").val(editing.mobile);
            $("#address").val(editing.address);
            $("#point").val(editing.point);
            var parts=editing.point.split(",");
            var lat=parseFloat(parts[0]);
            var lng=parseFloat(parts[1]);
            if(marker!==null){
                map.removeLayer(marker);
            }
            marker = L.marker({lat:lat,lng:lng}).addTo(map);
            map.panTo({lat:lat,lng:lng});
        }
        
        function getEditingAddress(){
            var str=$("form").data().item;
            return str;
        }
    </script>
{% endblock %}


{% block content %}
<div class="stepper">
  <div class="circle done"> <span class="label">1</span>
    <span class="title">انتخاب مدارک</span>

  </div> <span class="bar done"></span>

  <div class="circle done"> <span class="label">2</span>
    <span class="title"> پیوست مدارک</span>

  </div> <span class="bar done"></span>

  <div class="circle active"> <span class="label">3</span>
    <span class="title">تعیین آدرس</span>

  </div> <span class="bar active"></span>

  <div class="circle"> <span class="label">4</span>
    <span class="title">انتخاب دفتر ترجمه</span>

  </div> <span class="bar"></span>

  <div class="circle"> <span class="label">5</span>
    <span class="title">صورتحساب</span>

  </div>
</div>
<form data-item="{{address | json_encode()}}" class="needs-validation" style="margin-top: 100px;text-align: right;" method="post" action="save_address" novalidate>
    <input name="id" style="display: none;" type="number" class="form-control" id="id">
    <div class="form-group row" >
        <label  for="name" class="col-sm-2 col-form-label">نام و نام خانوادگی</label>
        <div class="col-sm-10">
            <input required name="name" type="text" class="form-control" id="name">
            <div class="invalid-feedback">
                لطفا نام تحویل دهنده یا تحویل گیرنده را وارد کنید
            </div>
        </div>
    </div>
    <div class="form-group row">
        <label for="phone" class="col-sm-2 col-form-label">موبایل</label>
        <div class="col-sm-10">
            <input required name="mobile" type="text" class="form-control" id="phone" pattern=".{11,11}">
            <div class="invalid-feedback">
                لطفا شماره موبایل را به درستی وارد کنید مثلا 09125556666
            </div>
        </div>
    </div>
    <div class="form-group row">
        <label for="phone" class="col-sm-2 col-form-label">آدرس کامل</label>
        <div class="col-sm-10">
            <input required name="address" type="text" class="form-control" id="address" pattern=".{15,600}">
            <div class="invalid-feedback">
                لطفا آدرس را به طور کامل وارد کنید
            </div>
        </div>
    </div>
    <div class="info">لطفا مکان تحویل مدارک را روی نقشه مشخص کنید تا بتوانیم نزدیکترین دفاتر ترجمه را به شما معرفی کنیم</div>
    <div class="container">
        <div id="map" style="width: 100%; height: 450px; background: #eee; border: 2px solid #aaa;"></div>
        <input style="display: none;" required name="point" type="text" class="form-control" id="point">
        <div class="invalid-feedback">
                    لطفا موقعیت گیرنده را روی نقشه تعیین کنید
        </div>
    </div>
    <div class="error">{{error}}</div>
    <button type="submit" class="btn btn-primary topButton">ثبت آدرس</button>
    <a href="تعیین_آدرس"> <div class="btn btn-primary topButton" >انصراف</div></a>
</form>
{% endblock %}
